Для подключения к серверу (nnfs_server), запущенному на хосте host и порте port, необходимо выполнить команду:
./nnfs_client host:port

Если клиент успешно подключился, появится сообщение "Successfully connected", и появится промпт для команд (">> ")
Далее клиенту можно передать одну из нескольких команд:
    - connect,
    - ls,
    - cd,
    - read,
    - write,
    - help,
    - quit

connect <dir>.      Команда проверяет наличие директории <dir> и назначает ее рабочей для клиента.
                    В случае отсутствия параметра <dir>, рабочей директорией будет назначена директория "/home".
                    Если директория назначена успешно, будет выведено сообщение об успехе,
                    если назначена директория по умочанию, это будет сообщено,
                    при ошибке будет выведено соответствующее сообщение

ls.                 Работает аналогичным с командой "ls" в linux образом. Выводит содержимое рабочей директории на экран.
                    Имеет ограничение в 512 символов. При превышении данного порога будет выведено столько полных
                    вхождений, сколько может поместиться
                    В случае успеха будет выведено сообщение об успехе,
                    в противном случае сообщение об ошибке

cd <dir>.           Команда работает также как команда "connect", за исключением одной детали - если <dir> - относительный путь,
                    то он будет отсчитываться от рабочей директории

read <from> <to>.   Команда выполняет чтение файла, заданного путем <from> с сервера в файл, заданный путем <to> на клиенте.
                    При передаче файла расчитывается количество частей, на которое его нужно разбить, а в процессе передачи приложение
                    оповещает о статусе передачи.
                    При успехе будет выведено сообщение, указывающее в какой файл были созранены данные,
                    при неудаче выводится сообщение об ошибке

write <from> <to>.  Команда выполняет запись файла, заданного путем <from> с сервера в файл, заданный путем <to> на клиенте.
                    При передаче файла расчитывается количество частей, на которое его нужно разбить, а в процессе передачи приложение
                    оповещает о статусе передачи.
                    При успехе будет выведено сообщение, указывающее в какой файл были созранены данные,
                    при неудаче выводится сообщение об ошибке

help                Выводит справку о командах

quit                Закрывает клиентскую сессию на сервере и выходит из приложения

Пример сессии с использованием большинства команд:
    Successfully connected                                    -- подключение к клиенту
    >> connect
    Current directory was set to a default directory - /home  -- использование connect без параметра - подключение к директории по умолчанию
    >> ls                                                     -- вывод содержимого директории
    lost+found
    ..
    .
    user
    >> cd user/Documents/Screenshots                          -- переход в директорию user/Documents/Screenshots
    Success
    >> read dog.jpg /tmp/1.jpg                                -- чтение файла dog.jpg из директории Screenshots на сервере в файл /tmp/1.jpg на клиенте
    Receiving chunk 1 of 3
    Receiving chunk 2 of 3
    Receiving chunk 3 of 3
    Success
    All chunks saved to "/tmp/1.jpg"
    >> write /tmp/1.jpg dog1.jpg                              -- запись файла /tmp/1.jpg с клиента в файл dog1.jpg на сервере
    Sending chunk 1 of 3
    Success
    Sending chunk 2 of 3
    Success
    Sending last chunk
    Success
    >> quit                                                   -- выход из приложения